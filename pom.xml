<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.5.RELEASE</version>
	</parent>

	<groupId>com.epsilon.metadata.image.location.service</groupId>
	<artifactId>exif-image-location-microservice-spring-boot-1.0.0</artifactId>
	<name>exif-image-location-microservice-spring-boot-1.0.0</name>
	<version>1.0.0-SNAPSHOT</version>

	<developers>
		<developer>
			<id>jduran</id>
			<name>Jorge Dur√°n</name>
			<organization>GFI</organization>
			<organizationUrl>http://www.gfi.es</organizationUrl>
			<roles>
				<role>Software Architect / Engineer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Properties Block for Docker-Container Configuration. -->
		<docker.image.prefix>docker-location-poc</docker.image.prefix>
		<docker.image.host.general>http://192.168.59.103:2375</docker.image.host.general>
		<docker.image.host>http://192.168.59.103:2375</docker.image.host>
		<docker.image.tag.name>location-rest-service</docker.image.tag.name>
		<docker.image.name>exif-image-location-microservice-container</docker.image.name>
		
		<!-- Properties Block for Dependency version management -->
		<docker.plugin.version>0.3.258</docker.plugin.version>
        <junit.version>4.12</junit.version>
        <mockito-all.version>1.9.0</mockito-all.version>
        <com-google-guava.version>19.0</com-google-guava.version>
        <slf4j-api.version>1.6.1</slf4j-api.version>
        <apache-httpclient.version>4.2.1</apache-httpclient.version>
        <commons-lang.version>2.5</commons-lang.version>
        <slf4j-log4j12.version>1.6.1</slf4j-log4j12.version>
        <adobe-xmpcore.version>5.1.2</adobe-xmpcore.version>
        <rest-assured.version>2.4.0</rest-assured.version>
        <apache-httpcomponents.verion>4.2.1</apache-httpcomponents.verion>
        <drewnoakes-EXIF-metadata-extractor-library.version>2.9.1</drewnoakes-EXIF-metadata-extractor-library.version>
    </properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<!-- <version>3.0.7.RELEASE</version> -->
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<!-- <version>2.5</version> -->
		</dependency>

		<dependency>
            <groupId>com.adobe.xmp</groupId>
            <artifactId>xmpcore</artifactId>
            <version>${adobe-xmpcore.version}</version>
        </dependency>

		<!-- This dependency is not available in MAVEN-REPOSITORY. The library source-code muts be
			 downloaded and compiled to be generated locally and then referenced by the .m2 local
			 repository or by defining it with scope::SYSTEM. -->
		<dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>EXIF-metadata-extractor-library</artifactId>
            <version>${drewnoakes-EXIF-metadata-extractor-library.version}</version>
            <!-- <scope>system</scope> -->
            <!-- <systemPath>${basedir}/libs/EXIF-metadata-extractor-library-2.9.1.jar</systemPath> -->
        </dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${com-google-guava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
			<version>${mockito-all.version}</version>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
		</dependency>

	</dependencies>
	
	<pluginRepositories>

		<pluginRepository>
			<id>repo1.maven.org</id>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>

		<pluginRepository>
			<id>oss.sonatype.org</id>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>

	</pluginRepositories>

	<repositories>
		<repository>
			<id>repo1.maven.org</id>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>repository.jboss.org</id>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>

	<distributionManagement>
		<repository>
			<id>apache.staging.https</id>
			<name>Apache Staging Repository</name>
			<url>https://repository.apache.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<site>
			<id>apache.website</id>
			<url>${siteUrlDeployment}</url>
			<name>Flume Site</name>
		</site>
	</distributionManagement>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.2.2</version>
				<configuration>
					<repositoryLayout>flat</repositoryLayout>
					<configurationSourceDirectory>src/main/config</configurationSourceDirectory>
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<programs>
						<program>
							<mainClass>com.epsilon.metadata.image.location.GeoTagLocationApplication</mainClass>
							<name>imagemetadata</name>
						</program>
					</programs>
				</configuration>
				<executions>
					<execution>
						<id>package</id>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
			</plugin>
			
			
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<properties>
				<integration-tests.skip>false</integration-tests.skip>
				<!-- <start-class></start-class> -->
			</properties>
			<id>dockerize-desarrollo</id>
				<build>
				<plugins>
					<!-- SPOTIFY DOCKER-IMAGE PLUGIN -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker.plugin.version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
							<dockerHost>${docker.image.host.general}</dockerHost>
							<imageName>${docker.image.prefix}/${docker.image.name}:${docker.image.tag.name}</imageName>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
	
</project>
